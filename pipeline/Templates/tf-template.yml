# parameters:
# - name: Environments
#   displayName: Select Environments for deployment
#   type: string
#   default: Dev
#   values: 
#     - Dev
#     - Prod
#     - QA
#     - Sendbox

parameters:
  - name: Environments


# variables:
#   # this is the first way we directly give like variablename: value
#   Work_dir: $(System.DefaultWorkingDirectory)/Environments

    #this is the 2nd way in which saperately define name then variable value
  # - name: Work_dir
  #   value: $(System.DefaultWorkingDirectory)/Environments


stages:
  - stage: Keyvault
    displayName: "Azure Key Valut Integration"
    jobs:
      - job: Keyvaultintegration
        displayName: Azure Key Valut Integration
        steps:
        - task: AzureKeyVault@2
          displayName: Azure Key Valut Integration for handle secrates
          inputs:
            azureSubscription: 'Websure_Service_Connection1'
            KeyVaultName: 'PATpta1'
            SecretsFilter: '*'
            RunAsPreJob: true

  - stage: Checkov
    displayName: "Checkov Terraform Code"
    jobs:
      - job: CheckOV
        displayName: Checkov terraform code check
        steps:
        - script: |
            curl -LO https://github.com/bridgecrewio/checkov/releases/download/3.2.336/checkov_windows_X86_64.zip
            tar -xf checkov_windows_X86_64.zip -C $(Work_dir)
            checkov -d $(Work_dir) -o cli
          displayName: 'Install Checkov and run'

  - stage: tflint
    displayName: "Lint Terraform Code"
    jobs:
      - job: tflintinstall
        displayName: tflint install
        steps:
        - script: |
            curl -LO https://github.com/terraform-linters/tflint/releases/latest/download/tflint_windows_amd64.zip
            tar -xf tflint_windows_amd64.zip -C $(Work_dir)
          displayName: 'Install TFLint'
        
        - script: |
            $(Work_dir)\tflint --init
            $(Work_dir)\tflint
          displayName: 'Run TFLint'

  - stage: Terraforminstaller
    displayName: Teraform tool installer
    jobs:
      - job: Terraforminstaller
        displayName: Terraform tool installer
        steps:
        - task: TerraformInstaller@1
          displayName: Terraform installer 
          inputs:
            terraformVersion: 'latest'
            
  - stage: Terraforminitplanandtfsec
    dependsOn: Terraforminstaller
    displayName: Terraform init, plan and tfsec
    jobs:
      - job: tfsec
        displayName: tfsec check
        steps:
        - task: tfsec@1
          displayName: Tfsec Check vulnerbality
          inputs:
            version: 'v1.26.0'
            dir: '$(System.DefaultWorkingDirectory)/Environments'

      - job: Terrforminitandplan
        displayName: Terraform init
        steps:
        - task: TerraformTaskV4@4
          displayName: terraform init
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/Environments'
            backendServiceArm: 'Websure_Service_Connection'
            backendAzureRmResourceGroupName: 'prashant_rg'
            backendAzureRmStorageAccountName: 'prastoragehai'
            backendAzureRmContainerName: 'mypracontainer'
            backendAzureRmKey: '${{ parameters.Environments }}_terraform.tfstate'
        
        - task: TerraformTaskV4@4
          displayName: terraform plan
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/Environments'
            commandOptions: '--var-file=${{ parameters.Environments }}_Terraform.tfvars'
            environmentServiceNameAzureRM: 'Websure_Service_Connection'

  - stage: ManualValidationandterrformapply
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    displayName: Manual Validation and terrform apply  
    jobs:
      - job: Manualvalidation
        timeoutInMinutes: 1
        displayName: Manualvalidation
        pool: server
        steps:
        - task: ManualValidation@1
          displayName: manual validation
          inputs:
            notifyUsers: 'prashantgi1995@gmail.com'
            approvers: 'prashantgi1995@gmail.com'
        

      - job: Terraformapply
        dependsOn: Manualvalidation
        displayName: Terraform apply
        steps:
        - task: TerraformTaskV4@4
          displayName: terraform init
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/Environments'
            backendServiceArm: 'Websure_Service_Connection'
            backendAzureRmResourceGroupName: 'prashant_rg'
            backendAzureRmStorageAccountName: 'prastoragehai'
            backendAzureRmContainerName: 'mypracontainer'
            backendAzureRmKey: 'terraform.tfstate'
            
        - task: TerraformTaskV4@4
          displayName: terraform apply
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: '$(System.DefaultWorkingDirectory)/Environments'
            environmentServiceNameAzureRM: 'Websure_Service_Connection'
        